@page "/retrain"
@using System.Text.Json
@using static BlazorMLDashboard.MLModel
@using BlazorMLDashboard.Components.Pages.DataExplorer
@using Microsoft.Extensions.Options
@using BlazorMLDashboard.Components.Pages.DataAnalysis
@inject IOptions<ModelSettings> options
@inject IConfiguration config
<PageTitle>Retrain</PageTitle>

<RegressionChart TestResults="testResults"/>

<PermutationFeatureImportanceChart PermutationFeatureImportance="@testResults?.PermutationFeatureImportance" />

<h3>Stats</h3>
https://www.datatechnotes.com/2019/02/regression-model-accuracy-mae-mse-rmse.html#google_vignette
@if (testResults is not null)
{
<RSquaredGauge RSquared="testResults.RegressionMetrics.RSquared"/>

    <ul class="list-group">
        <li class="list-group-item"><span>RMSE: <span class="data">@testResults.RegressionMetrics.RootMeansSquaredError.ToString("#.###")</span></span></li>
        <li class="list-group-item">MAE: <span class="data">@testResults.RegressionMetrics.MeanAbsoluteError.ToString("#.###")</span></li>
        <li class="list-group-item">MSE: <span class="data">@testResults.RegressionMetrics.MeanSquaredError.ToString("#.###")</span></li>
        <li class="list-group-item">R<sup>2</sup>: <span class="data">@testResults.RegressionMetrics.RSquared.ToString("P")</span></li>
    </ul>
}
<button class="btn btn-primary" @onclick="IncrementCount">Retrain Model</button>

@code {
    private ModelSettings settings => options.Value;

    private async Task IncrementCount()
    {
        var model = new MLModel(options);
        model.Train();
        model.Evaluate();
        await Load();
    }

    TestDataResults? testResults;

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        string path = settings.GetPath(settings.AnalysisFileName);
        if (System.IO.File.Exists(path))
        {
            string json = await System.IO.File.ReadAllTextAsync(path);
            testResults = System.Text.Json.JsonSerializer.Deserialize<TestDataResults>(json, new JsonSerializerOptions(JsonSerializerDefaults.Web));
        }
    }

}
